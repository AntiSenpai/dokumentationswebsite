{# templates/customer/detail.html.twig #}
{% extends 'base.html.twig' %}

{% block body %}
<link rel="stylesheet" href="{{ asset('css/detail.css') }}">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<script src="https://cdn.jsdelivr.net/npm/@editorjs/editorjs@latest"></script> <!-- Editor.js -->
<script src="https://cdn.jsdelivr.net/npm/@editorjs/header@latest"></script> <!-- Header Tool -->
<script src="https://cdn.jsdelivr.net/npm/@editorjs/simple-image@latest"></script> <!-- Image Tool -->
<script src="https://cdn.jsdelivr.net/npm/@editorjs/list@latest"></script> <!-- List Tool -->
<script src="https://cdn.jsdelivr.net/npm/@editorjs/table@latest"></script> <!-- Table Tool -->

<body>
    <div id="wrapper">
        <!-- Sidebar -->
        <nav id="sidebar">
            <div class="sidebar-header">
                <h3 class="customer-name">{{ customer.name }}</h3>
            </div>

            <ul class="list-unstyled components">
<li class="active">
<a href="#allgemeinContent" class="sidenav-link"><i class="fas fa-info-circle icon"></i> Allgemein</a>
</li>
<li>
<a href="#netzContent" class="sidenav-link"><i class="fas fa-network-wired icon"></i> Netz</a>
</li>
<li>
<a href="#serverContent" class="sidenav-link"><i class="fas fa-server icon"></i> Server</a>
</li>
<li>
<a href="#clientsContent" class="sidenav-link"><i class="fas fa-desktop icon"></i> Clients</a>
</li>
<li>
<a href="#userPwdContent" class="sidenav-link"><i class="fas fa-user-lock icon"></i> User /Pwd's</a>
</li>
<li>
<a href="#routerFirewallContent" class="sidenav-link"><i class="fas fa-shield-alt icon"></i> Router/Firewall</a>
</li>
<li>
<a href="#providerContent" class="sidenav-link"><i class="fas fa-plug icon"></i> Provider</a>
</li>
<li>
<a href="#remoteMaintenanceContent" class="sidenav-link"><i class="fas fa-tools icon"></i> Fernwartung</a>
</li>
<li>
<a href="#backupContent" class="sidenav-link"><i class="fas fa-copy icon"></i> Backup</a>
</li>
<li>
<a href="#upsContent" class="sidenav-link"><i class="fas fa-battery-three-quarters icon"></i> USV</a>
</li>
<li>
<a href="#antivirusContent" class="sidenav-link"><i class="fas fa-virus icon"></i> Antivirus/Software</a>
</li>
<li>
<a href="#applicationSoftwareContent" class="sidenav-link"><i class="fas fa-th-list icon"></i> Anwendersoftware</a>
</li>
<li>
<a href="#otherInfoContent" class="sidenav-link"><i class="fas fa-asterisk icon"></i> Sonstige Informationen</a>
</li>    
    <div id="editContent" class="edit-section">
        <div class="edit-controls">
            <button id="editButton" class="btn btn-primary">Inhalt bearbeiten</button>
            <br>
            <a href="/doku/kundendoku" id="backButton" class="btn btn-secondary">Zurück</a>
        </div>
    </div>
</ul>
</nav>
    <!-- Page Content -->
<div id="content">
    <!-- Placeholder for Allgemein content; this will be shown by default -->
    <div id="allgemeinContent" class="content-section active">
        <div class="section allgemein">
            <h2>Allgemein</h2>
            
            <!-- Card für Kundeninformation -->
            <div class="card">
                <div class="card-header">
                    Kunde: {{ customer.name }}
                </div>
                <div class="card-body">
                    <p class="form-control-static">Kunde (Kd.Nr.): {{customer.id}}</p>
                    <p class="form-control-static">Standorte:</p>
                    <p class="form-control-static">{{ customer.location }}</p>
                </div>
            </div>

            <!-- Card für Ansprechpartner -->
            <div class="card editable-card-table">
                <div class="card-header">
                    Ansprechpartner
                </div>
                <div class="card-body">
                   
                </div>
            </div>
        </div>
        <button id="addCardBtn" class="btn btn-primary addCardBtn">Neue Karte</button>
    </div>

    <!-- Placeholder for Netz content; hidden by default -->
    <div id="netzContent" class="content-section" style="display: none;">
        <div class="section netz">
            <h2>Netz</h2>

            <!-- Card for Netzwerk Topologie -->
            <div class="card editable-card">
                <div class="card-header">Netzwerk Topologie</div>
                <div class="card-body quill-editor">
                    <p class="form-control-static">[Beschreibung der Netzwerk Topologie]</p>
                </div>
            </div>

            <!-- Card for IP-Adressen -->
            <div class="card editable-card">
                <div class="card-header">
                    IP-Adressen
                </div>
                <div class="card-body quill-editor">
                    <div class="form-group">
                       
                    </div>
                </div>
            </div>
        </div>
        <button id="addCardBtn" class="btn btn-primary addCardBtn">Neue Karte</button>
    </div>

    <div id="serverContent" class="content-section" style="display: none;">
        <div class="section server">
            <h2>Server</h2>

            <!-- Card for Server Topologie -->
            <div class="card">
                <div class="card-header">Server Topologie</div>
                <div class="card-body quill-editor">
                    <p class="form-control-static">[Beschreibung der Server Topologie]</p>
                </div>
            </div>

            <!-- Card for IP-Adressen -->
            <div class="card editable-card">
                <div class="card-header">IP-Adressen</div>
                <div class="card-body quill-editor">
                    <div class="form-group">
                    </div>
                </div>
            </div>
        </div>
        <button id="addCardBtn" class="btn btn-primary addCardBtn">Neue Karte</button>
    </div>

    <div id="clientsContent" class="content-section" style="display: none;">
        <div class="section clients">
            <h2>Clients (Allgemein)</h2>

            <!-- Card for Netzwerk Topologie -->
            <div class="card editable-card">
                <div class="card-header">Informationen</div>
                <div class="card-body quill-editor">
                    <p class="form-control-static">[Allgemeiner Inhalt zu Clients]</p>
                </div>
            </div>

            <!-- Card for IP-Adressen -->
            <div class="card editable-card">
                <div class="card-header">Clients</div>
                <div class="card-body quill-editor">
                    <div class="form-group">
                        <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">Hersteller</th>
                                <th scope="col">IP-Range/DHCP</th>
                                <th scope="col">Anzahl/Alter</th>
                                <th scope="col">Sonstiges</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>test</td>
                                <td>test</td>
                                <td>test</td>
                                <td>test</td>
                            </tr>
                            <tr>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <button id="addCardBtn" class="btn btn-primary addCardBtn">Neue Karte</button>
    </div>

    <div id="userPwdContent" class="content-section" style="display: none;">
        <div class="section userpwd">
            <h2>User / Pwd´s</h2>

            <!-- Card for Netzwerk Topologie -->
            <div class="card editable-card">
                <div class="card-header">Allgemein</div>
                <div class="card-body quill-editor">
                    <p class="form-control-static">[Allgemeine Informationen zu User / Pwds]</p>
                </div>
            </div>

            <!-- Card for IP-Adressen -->
            <div class="card editable-card">
                <div class="card-header"></div>
                <div class="card-body quill-editor">
                    <div class="form-group">
                        <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">Domänenbenutzer</th>
                                <th scope="col">Passwort</th>
                                <th scope="col">Benutzer wenn bekannt</th>
                                <th scope="col">Sonstiges</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>test</td>
                                <td>test</td>
                                <td>test</td>
                                <td>test</td>
                            </tr>
                            <tr>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <button id="addCardBtn" class="btn btn-primary addCardBtn">Neue Karte</button>
    </div>

    <div id="routerFirewallContent" class="content-section" style="display: none;">
        <div class="section routerfirewall">
            <h2>Router Firewall</h2>

            <!-- Card for Netzwerk Topologie -->
            <div class="card editable-card">
                <div class="card-header">Topologie</div>
                <div class="card-body quill-editor">
                    <p class="form-control-static">[Allgemeine Informationen zu Router/Firewall]</p>
                </div>
            </div>

            <!-- Card for IP-Adressen -->
            <div class="card editable-card">
                <div class="card-header">Router oder Firewall</div>
                <div class="card-body quill-editor">
                    <div class="form-group">
                        <table class="table">
                        <thead>
                            <tr>
                                <th scope="col">Typ</th>
                                <th scope="col">IP</th>
                                <th scope="col">Admin-User/Passwort</th>
                                <th scope="col">Zugriff</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>test</td>
                                <td>test</td>
                                <td>test</td>
                                <td>test</td>
                            </tr>
                            <tr>
                                <td></td>
                                <td></td>
                                <td></td>
                                <td></td>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <button id="addCardBtn" class="btn btn-primary addCardBtn">Neue Karte</button>
    </div>

    <div id="providerContent" class="content-section" style="display: none;">
        <div class="section provider">
            <h2>Provider</h2>

            <!-- Card for Topologie -->
            <div class="card editable-card">
                <div class="card-header"> Topologie</div>
                <div class="card-body quill-editor">
                    <p class="form-control-static">[Allgemeine Informationen zum Provider]</p>
                </div>
            </div>

            <!-- Card for IP-Adressen -->
            <div class="card editable-card">
                <div class="card-header">Provider</div>
                <div class="card-body quill-editor">
                    <div class="form-group">
                        <table class="table">
                            <tr>
                                <th scope="col">Provider-DSL</th>
                                <th scope="col">Benutzername</th>
                                <th scope="col">Passwort</th>
                                <th scope="col">Tarif/Sonstiges</th>
                            </tr>
                            <tr>
                                <td>test</td>
                                <td>test</td>
                                <td>test</td>
                                <td>test</td>
                            </tr>
                            <tr>
                                <th scope="col">Provider-Mail</th>
                                <th scope="col">Benutzername</th>
                                <th scope="col">Passwort</th>
                                <th scope="col">pop3/smtp-Server</th>
                            </tr>
                            <tr>
                                <td>t</td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                            <tr>
                                <th scope="col">Provider-WWW</th>
                                <th scope="col">Benutzername</th>
                                <th scope="col">Passwort</th>
                                <th scope="col">Admin-URL</th>
                            </tr>
                            <tr>
                                <td>t</td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <button id="addCardBtn" class="btn btn-primary addCardBtn">Neue Karte</button>
    </div>

    <div id="remoteMaintenanceContent" class="content-section" style="display: none;">
        <div class="section remotemaintenance">
            <h2>Fernwartung</h2>

            <!-- Card for Netzwerk Topologie -->
            <div class="card editable-card">
                <div class="card-header">Topologie</div>
                <div class="card-body quill-editor">
                    <p class="form-control-static">[Allgemeines zur Fernwartung]</p>
                </div>
            </div>

            <!-- Card for IP-Adressen -->
            <div class="card editable-card">
                <div class="card-header">Fernwartung:</div>
                <div class="card-body quill-editor">
                    <div class="form-group">
                        <table class="table">
                            <tr>
                                <th scope="col">VPN-Gateway (IP)</th>
                                <th scope="col">VPN-Typ</th>
                                <th scope="col">User / Passwort</th>
                                <th scope="col">PSK</th>
                            </tr>
                            <tr>
                                <td>test</td>
                                <td>test</td>
                                <td>test</td>
                                <td>test</td>
                            </tr>
                            <tr>
                                <th scope="col">Typ (RDP/VNC)</th>
                                <th scope="col">IP / DNS-Name</th>
                                <th scope="col">Admin-User / Passwort</th>
                                <th scope="col">Zugriff (VPN/Direkt)</th>
                            </tr>
                            <tr>
                                <td>t</td>
                                <td></td>
                                <td></td>
                                <td></td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <button id="addCardBtn" class="btn btn-primary addCardBtn">Neue Karte</button>
    </div>


    <div id="backupContent" class="content-section" style="display: none;">
        <div class="section netz">
            <h2>Backup</h2>

            <!-- Card for Netzwerk Topologie -->
            <div class="card editable-card">
                <div class="card-header">Topologie</div>
                <div class="card-body quill-editor">
                    <p class="form-control-static">[Beschreibung]</p>
                </div>
            </div>

            <!-- Card for IP-Adressen -->
            <div class="card editable-card">
                <div class="card-header">Backup:</div>
                <div class="card-body quill-editor">
                    <div class="form-group">
                        <table class="table">
                            <tr>
                                <th scope="col">Software</th>
                                <th scope="col">Server</th>
                                <th scope="col">Hardware</th>
                                <th scope="col">Anmerkungen</th>
                            </tr>
                            <tr>
                                <td>test</td>
                                <td>test</td>
                                <td>test</td>
                                <td>test</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <button id="addCardBtn" class="btn btn-primary addCardBtn">Neue Karte</button>
    </div>

    <div id="upsContent" class="content-section" style="display: none;">
        <div class="section ups">
            <h2>USV</h2>

            <!-- Card for Netzwerk Topologie -->
            <div class="card editable-card">
                <div class="card-header">Topologie</div>
                <div class="card-body quill-editor">
                    <p class="form-control-static">[Beschreibung]</p>
                </div>
            </div>

            <!-- Card for IP-Adressen -->
            <div class="card editable-card">
                <div class="card-header">USV:</div>
                <div class="card-body quill-editor">
                    <div class="form-group">
                        <table class="table">
                            <tr>
                                <th scope="col">Netzwerk (IP)</th>
                                <th scope="col">Domäne</th>
                                <th scope="col">Gateway</th>
                                <th scope="col">DNS</th>
                            </tr>
                            <tr>
                                <td>test</td>
                                <td>test</td>
                                <td>test</td>
                                <td>test</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <button id="addCardBtn" class="btn btn-primary addCardBtn">Neue Karte</button>
    </div>

    <div id="antivirusContent" class="content-section" style="display: none;">
        <div class="section netz">
            <h2>Antivirus / Software</h2>

            <!-- Card for Netzwerk Topologie -->
            <div class="card editable-card">
                <div class="card-header">Topologie</div>
                <div class="card-body quill-editor">
                    <p class="form-control-static">[Beschreibung]</p>
                </div>
            </div>

            <!-- Card for IP-Adressen -->
            <div class="card editable-card">
                <div class="card-header">Antivirus-Software</div>
                <div class="card-body quill-editor">
                    <div class="form-group">
                        <table class="table">
                            <tr>
                                <th scope="col">Software</th>
                                <th scope="col">Server/Clients</th>
                                <th scope="col">Admin-User/Passwort</th>
                                <th scope="col">Version / Sonstiges</th>
                            </tr>
                            <tr>
                                <td>test</td>
                                <td>test</td>
                                <td>test</td>
                                <td>test</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <button id="addCardBtn" class="btn btn-primary addCardBtn">Neue Karte</button>
    </div>

    <div id="applicationSoftwareContent" class="content-section" style="display: none;">
        <div class="section netz">
            <h2>Anwendersoftware</h2>

            <!-- Card for Netzwerk Topologie -->
            <div class="card editable-card">
                <div class="card-header">Topologie</div>
                <div class="card-body quill-editor">
                    <p class="form-control-static">[Beschreibung]</p>
                </div>
            </div>

            <!-- Card for IP-Adressen -->
            <div class="card editable-card">
                <div class="card-header">Anwendersoftware</div>
                <div class="card-body quill-editor">
                    <div class="form-group">
                        <table class="table">
                            <tr>
                                <th scope="col">Software</th>
                                <th scope="col">Server/Clients</th>
                                <th scope="col">Admin-User/Passwort</th>
                                <th scope="col">Version / Sonstiges</th>
                            </tr>
                            <tr>
                                <td>test</td>
                                <td>test</td>
                                <td>test</td>
                                <td>test</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <button id="addCardBtn" class="btn btn-primary addCardBtn">Neue Karte</button>
    </div>

    <div id="otherInfoContent" class="content-section" style="display: none;">
        <div class="section netz">
            <h2>Sonstige Informationen</h2>

            <!-- Card for IP-Adressen -->
            <div class="card editable-card">
                <div class="card-header">Sonstige Anwendungen/Informationen</div>
                <div class="card-body quill-editor">
                    <p class="form-control-static">[IP-Adressen Informationen]</p>
                </div>
            </div>
        </div>
        <button id="addCardBtn" class="btn btn-primary addCardBtn">Neue Karte</button>
    </div>





    <!-- Weitere content-sections hier hinzufügen ... -->
    <!-- Button zum Hinzufügen neuer Cards -->
</div>
<script>
document.addEventListener('DOMContentLoaded', function() {
    const sidebarLinks = document.querySelectorAll('#sidebar .sidenav-link');
    const contentSections = document.querySelectorAll('.content-section');
    const backButton = document.getElementById('backButton');
    let editMode = localStorage.getItem('editMode') === 'true';

    function adjustTableHeight() {
        document.querySelectorAll('.card-body .ce-table__content').forEach(table => {
            let cardBodyHeight = table.closest('.card-body').clientHeight;
            table.style.height = cardBodyHeight + 'px';
            let tableHeight = table.scrollHeight;
            if(tableHeight > cardBodyHeight) {
                table.closest('.card').style.height = (table.closest('.card').clientHeight + (tableHeight - cardBodyHeight)) + 'px';
            }
        });
    }

    const observer = new MutationObserver(function(mutations) {
        mutations.forEach(function(mutation) {
            if (mutation.type === 'childList') {
                adjustTableHeight();
            }
        });
    });

    document.querySelectorAll('.card-body .ce-table__content').forEach(table => {
        observer.observe(table, { childList: true, subtree: true });
    });

    function adjustTableSize() {
        document.querySelectorAll('.card-body .ce-table').forEach(table => {
            table.style.width = '100%';
        });
    }

    function hideAllSections() {
        contentSections.forEach(section => section.style.display = 'none');
    }

    function showSection(sectionId) {
        const section = document.getElementById(sectionId);
        if (section) {
            section.style.display = 'block';
        }
    }

    sidebarLinks.forEach(link => {
        link.addEventListener('click', function(e) {
            e.preventDefault();
            hideAllSections();
            const sectionId = this.getAttribute('href').substring(1);
            showSection(sectionId);
            sidebarLinks.forEach(lnk => lnk.parentElement.classList.remove('active'));
            this.parentElement.classList.add('active');
        });
    });

    backButton.addEventListener('click', function() {
        editMode = false;
        localStorage.setItem('editMode', editMode);
        updateEditModeUI();
        toggleEditableCards(editMode);
        toggleEditorJSInstances(editMode);
    });

    var editButton = document.getElementById('editButton');
    editButton.addEventListener('click', function() {
        editMode = !editMode;
        localStorage.setItem('editMode', editMode);
        updateEditModeUI();
        toggleEditableCards(editMode);
        toggleEditorJSInstances(editMode);
    });

    function updateEditModeUI() {
        editButton.textContent = editMode ? 'Bearbeitungsmodus aktiv' : 'Bearbeitungsmodus inaktiv';
        editButton.style.color = editMode ? 'lightgreen' : 'lightcoral';
        document.querySelectorAll('.addCardBtn').forEach(btn => {
            btn.style.display = editMode ? 'block' : 'none';
        });
    }

    function toggleEditableCards(editMode) {
        const editableCards = document.querySelectorAll('.editable-card .card-body, .editable-card table th, .editable-card table td');
        editableCards.forEach(card => {
            card.contentEditable = editMode;
        });

        const deleteButtons = document.querySelectorAll('.editable-card .delete-btn');
        deleteButtons.forEach(btn => {
            btn.style.display = editMode ? 'block' : 'none';
            btn.addEventListener('click', function(event) {
                event.stopPropagation();
                if (!confirm('Confirm deletion')) return;
                btn.closest('.card').remove();
            });
        });
    }

    function addDeleteButtonToCardHeader(card) {
        if (!card.querySelector('.delete-btn')) {
            let deleteBtn = document.createElement('button');
            deleteBtn.classList.add('delete-btn');
            deleteBtn.innerHTML = '<i class="fa-solid fa-circle-xmark"></i>';
            deleteBtn.style.display = 'none';
            card.querySelector('.card-header').appendChild(deleteBtn);
        }
    }

    function toggleEditorJSInstances(editMode) {
        document.querySelectorAll('.editable-card-table').forEach(card => {
            const editorContainer = card.querySelector('.editor-js');
            if (editMode) {
                if (!card.editorInstance) {
                    initializeEditorJSForTables(card);
                    if (editorContainer) {
                        editorContainer.style.display = 'block';
                    }
                }
            } else {
                if (card.editorInstance) {
                    card.editorInstance.destroy();
                    card.editorInstance = null;
                }
                if (editorContainer) {
                    editorContainer.style.display = 'none';
                }
            }
        });
    }

    function initializeEditorJSForTables(card) {
        const cardBody = card.querySelector('.card-body');
        if (!cardBody) {
            console.error('CardBody element not found in', card);
            return;
        }
        const initialData = getInitialDataForCard(card);
        card.editorInstance = new EditorJS({
            holder: cardBody,
            tools: { table: Table },
            data: initialData,
            onReady: function() {
                console.log('EditorJS initialized for', cardBody);
            }
        });
    }

    function getInitialDataForCard(card) {
        // Return initial data based on card type or content
        // Example:
        if (card.classList.contains('editable-card-table') && card.closest('.allgemein') ) {
            return {
                blocks: [{
                    type: "table",
                    data: {
                        content: [
                            ["Ansprechpartner", "Telefon", "Mobil", "E-Mail"],
                            ["Technisch:", "", "", ""],
                            ["Vor Ort:", "", "", ""]
                        ]
                    }
                }]
            };
        }
        // Add more conditions for other card types
    }

    function initializeEditorJSForCards(editMode) {
    document.querySelectorAll('.editable-card-table').forEach(card => {
        const cardBody = card.querySelector('.card-body');
        if (!cardBody) {
            console.error('CardBody element not found in', card);
            return;
        }

        const initialData = getInitialDataForCard(card);

        // Erstellen oder Zerstören der EditorJS-Instanz basierend auf dem Editiermodus
        if (editMode) {
            if (!card.editorInstance) {
                card.editorInstance = new EditorJS({
                    holder: cardBody,
                    tools: { table: Table },
                    data: initialData,
                    onReady: function() {
                        console.log('EditorJS initialized for', cardBody);
                    }
                });
            }
        } else {
            if (card.editorInstance) {
                card.editorInstance.destroy();
                card.editorInstance = null;
            }
        }
    });
}


    document.querySelectorAll('.addCardBtn').forEach(addCardBtn => {
        addCardBtn.addEventListener('click', function() {
            if (!editMode) return;

            let cardTitle = prompt("Geben Sie den Titel der neuen Karte ein", "Neue Karte");
            let newCard = document.createElement('div');
            newCard.className = 'card editable-card';
            newCard.innerHTML = `<div class="card-header">${cardTitle}<button class="delete-btn" style="display: none;"><i class="fa-solid fa-circle-xmark"></i></button></div>` +
                                `<div class="card-body"></div>`;

            this.closest('.content-section').querySelector('.section').appendChild(newCard);
            addDeleteButtonToCardHeader(newCard);

            const editor = new EditorJS({
                holder: newCard.querySelector('.card-body'),
                tools: {
                    header: Header,
                    list: List,
                    image: SimpleImage,
                    table: Table
                }
            });
            newCard.editorInstance = editor;
        });
    });

    hideAllSections();
    updateEditModeUI();
    adjustTableSize();
    adjustTableHeight();
    toggleEditableCards(editMode);
    initializeEditorJSForCards(editMode);
    showSection('allgemeinContent');
    document.querySelector('#sidebar .sidenav-link[href="#allgemeinContent"]').parentElement.classList.add('active');
});
</script>
</body>
{% endblock %}